- category: mandatory
  customVariables: []
  description: |-
    WebLogic proprietary web service implementation class
    This web service stub uses the WebLogic proprietary web service implementation class ("weblogic.wsee.jaxrpc.ServiceImpl").. It might have been generated by a WebLogic proprietary tool.. This should be replaced using the standard Java EE JAX-WS framework. It could be regenerated using the JBoss web services tools.. Please refer to the [JAX-WS web service](https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/6.4/html-single/development_guide/#chap-JAX-WS_Web_Services) guide for more information.
  effort: 1
  labels:
  - konveyor.io/source=weblogic
  - konveyor.io/target=eap6
  - konveyor.io/target=eap
  - webservice
  - weblogic
  links:
  - title: JAX-WS Web Service Clients
    url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/6.4/html-single/development_guide/#chap-JAX-WS_Web_Services
  message: This web service stub uses the WebLogic proprietary web service implementation
    class ("weblogic.wsee.jaxrpc.ServiceImpl").. It might have been generated by a
    WebLogic proprietary tool.. This should be replaced using the standard Java EE
    JAX-WS framework. It could be regenerated using the JBoss web services tools..
    Please refer to the [JAX-WS web service](https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/6.4/html-single/development_guide/#chap-JAX-WS_Web_Services)
    guide for more information.
  ruleID: weblogic-webservices-01000
  when:
    java.referenced:
      location: INHERITANCE
      pattern: weblogic.wsee.jaxrpc.ServiceImpl
- category: mandatory
  customVariables: []
  description: |-
    WebLogic asynchronous web service client
    The [WebLogic proprietary Asynchronous Web Service Client API](https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm) should be replaced using calls to the JAX-WS asynchronous API.. More information is available in the [JBoss EAP documentation](https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/6.4/html-single/Development_Guide/index.html#Develop_a_JAX-WS_Client_Application).
  effort: 3
  labels:
  - konveyor.io/source=weblogic
  - konveyor.io/target=eap6
  - konveyor.io/target=eap
  - webservice
  - weblogic
  - client
  links:
  - title: WebLogic Asynchronous Execution Documentation
    url: https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm
  - title: Develop a JAX-WS Client Application
    url: https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/6.4/html-single/Development_Guide/index.html#Develop_a_JAX-WS_Client_Application
  message: The [WebLogic proprietary Asynchronous Web Service Client API](https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm)
    should be replaced using calls to the JAX-WS asynchronous API.. More information
    is available in the [JBoss EAP documentation](https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/6.4/html-single/Development_Guide/index.html#Develop_a_JAX-WS_Client_Application).
  ruleID: weblogic-webservices-02000
  when:
    java.referenced:
      pattern: weblogic.wsee.async.AsyncPreCallContext
- category: mandatory
  customVariables: []
  description: |-
    WebLogic proprietary web service authentication
    Replace proprietary web-service authentication with JAX-WS standard calls. To attach authentication with JBoss EAP, simply use the following code:. ```java. URL wsdlURL = new File("resources/jaxws/samples/context/WEB-INF/wsdl/TestEndpoint.wsdl").toURL();. QName qname = new QName("http://org.jboss.ws/jaxws/context", "TestEndpointService");. Service service = Service.create(wsdlURL, qname);. port = (TestEndpoint)service.getPort(TestEndpoint.class);. BindingProvider bp = (BindingProvider)port;. bp.getRequestContext().put(BindingProvider.USERNAME_PROPERTY, "jsmith");. bp.getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, "PaSSw0rd");. ```
  effort: 3
  labels:
  - konveyor.io/source=weblogic
  - konveyor.io/target=eap6
  - konveyor.io/target=eap
  - webservice
  - weblogic
  - security
  links:
  - title: JBoss EAP 5 CXF User Guide
    url: https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/5/html/Web_Services_CXF_User_Guide/sect-Authentication.html
  message: Replace proprietary web-service authentication with JAX-WS standard calls.
    To attach authentication with JBoss EAP, simply use the following code:. ```java.
    URL wsdlURL = new File("resources/jaxws/samples/context/WEB-INF/wsdl/TestEndpoint.wsdl").toURL();.
    QName qname = new QName("http://org.jboss.ws/jaxws/context", "TestEndpointService");.
    Service service = Service.create(wsdlURL, qname);. port = (TestEndpoint)service.getPort(TestEndpoint.class);.
    BindingProvider bp = (BindingProvider)port;. bp.getRequestContext().put(BindingProvider.USERNAME_PROPERTY,
    "jsmith");. bp.getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, "PaSSw0rd");.
    ```
  ruleID: weblogic-webservices-03000
  when:
    java.referenced:
      location: METHOD_CALL
      pattern: weblogic.wsee.connection.transport.http.HttpTransportInfo.setUsername*
- category: mandatory
  customVariables: []
  description: |-
    WebLogic proprietary web services API - weblogic.wsee.context.WebServiceContext
    This code uses the WebLogic specific class `weblogic.wsee.context.WebServiceContext`. This usage will need to be replaced with the Java Enterprise Edition standard `javax.xml.WebServiceContext` interface.. Example code:. ```java. @Resource. private WebServiceContext webServiceContext;. ```
  effort: 1
  labels:
  - konveyor.io/source=weblogic
  - konveyor.io/target=eap6
  - konveyor.io/target=eap
  - webservice
  - weblogic
  - context
  links:
  - title: javax.xml.WebServiceContext Documentation
    url: http://docs.oracle.com/javaee/6/api/javax/xml/ws/WebServiceContext.html
  message: This code uses the WebLogic specific class `weblogic.wsee.context.WebServiceContext`.
    This usage will need to be replaced with the Java Enterprise Edition standard
    `javax.xml.WebServiceContext` interface.. Example code:. ```java. @Resource. private
    WebServiceContext webServiceContext;. ```
  ruleID: weblogic-webservices-04000
  when:
    java.referenced:
      pattern: weblogic.wsee.context.WebServiceContext
- category: mandatory
  customVariables: []
  description: |-
    WebLogic proprietary web services API - ContextNotFoundException
    This exception (`weblogic.wsee.context.ContextNotFoundException`) is WebLogic specific and can be removed.
  effort: 1
  labels:
  - konveyor.io/source=weblogic
  - konveyor.io/target=eap6
  - konveyor.io/target=eap
  - webservice
  - weblogic
  - context
  links: []
  message: This exception (`weblogic.wsee.context.ContextNotFoundException`) is WebLogic
    specific and can be removed.
  ruleID: weblogic-webservices-05000
  when:
    java.referenced:
      pattern: weblogic.wsee.context.ContextNotFoundException
- category: mandatory
  customVariables: []
  description: |-
    WebLogic proprietary web services generated client classes
    This class has been generated by a WebLogic web service client generator (ClientGen).. It could be replaced by an equivalent standard Java EE technology using for example the EAP 6 wsconsume tool, the wsgen tool or the CXF tools.
  effort: 1
  labels:
  - konveyor.io/source=weblogic
  - konveyor.io/target=eap6
  - konveyor.io/target=eap
  - webservice
  - weblogic
  - client
  links:
  - title: Oracle ClientGen Ant Task Reference
    url: https://docs.oracle.com/cd/E13222_01/wls/docs90/webserv/anttasks.html#1039270
  - title: EAP 6 development guide - Develop a JAX-WS client
    url: https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/6.4/html-single/Development_Guide/index.html#Develop_a_JAX-WS_Client_Application
  - title: JAX-WS - wsgen
    url: https://jax-ws.java.net/nonav/2.2.6/docs/ch04.html#tools-wsgen
  - title: Apache CXF tools
    url: https://cxf.apache.org/docs/tools.html
  message: This class has been generated by a WebLogic web service client generator
    (ClientGen).. It could be replaced by an equivalent standard Java EE technology
    using for example the EAP 6 wsconsume tool, the wsgen tool or the CXF tools.
  ruleID: weblogic-webservices-06000
  when:
    or:
    - java.referenced:
        location: PACKAGE
        pattern: weblogic.wsee.tools.clientgen*
    - java.referenced:
        location: PACKAGE
        pattern: weblogic.webservice*
- category: mandatory
  customVariables: []
  description: |-
    WebLogic proprietary web service annotation @Transactional
    Replace WebLogic proprietary web-service annotation `@Transactional` by the standard Java EE annotation `@TransactionAttribute`.
  effort: 3
  labels:
  - konveyor.io/source=weblogic
  - konveyor.io/target=eap6
  - konveyor.io/target=eap
  - webservice
  - weblogic
  links:
  - title: WebLogic-specific Annotations - Transactional
    url: https://docs.oracle.com/middleware/11119/wls/WSREF/annotations.htm#i1058163
  - title: JBoss EAP 6 - API TransactionAttribute
    url: https://access.redhat.com/webassets/avalon/d/JBoss_Enterprise_Application_Platform-6-API_Documentation-en-US/files/javadoc/javax/ejb/TransactionAttribute.html
  message: Replace WebLogic proprietary web-service annotation `@Transactional` by
    the standard Java EE annotation `@TransactionAttribute`.
  ruleID: weblogic-webservices-07000
  when:
    java.referenced:
      location: ANNOTATION
      pattern: weblogic.jws.Transactional
